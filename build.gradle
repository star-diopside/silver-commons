allprojects {
    group = "jp.gr.java_conf.star_diopside.spark.commons"
    version = "1.0.0-SNAPSHOT"

    ext {
        lombokVersion = "1.16.10"

        servletApiVersion = "3.1.0"
        validationApiVersion = "1.1.0.Final"
        slf4jVersion = "1.7.21"
        logbackVersion = "1.1.7"
        springVersion = "4.3.2.RELEASE"
        springBatchVersion = "3.0.7.RELEASE"
        commonsLang3Version = "3.4"
        commonsCollections4Version = "4.1"
        commonsIoVersion = "2.5"
        hibernateJpa21Version = "1.0.0.Final"
        aspectjweaverVersion = "1.8.9"

        junitVersion = "4.12"
        hamcrestVersion = "1.3"
        dbunitVersion = "2.5.3"
        mockitoVersion = "1.10.19"
        h2Version = "1.4.192"
    }
}

subprojects {
    apply plugin: "java"
    apply plugin: "maven"
    apply plugin: "checkstyle"
    apply plugin: "findbugs"
    apply plugin: "jacoco"

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
    }

    repositories {
        jcenter()
    }

    configurations {
        all*.exclude group: "commons-logging", module: "commons-logging"
    }

    dependencies {
        compileOnly "org.projectlombok:lombok:${lombokVersion}"
    }

    javadoc {
        options.charSet = "UTF-8"
        options.encoding = "UTF-8"
    }

    checkstyle {
        toolVersion = "7.1.1"
        configFile = file("${rootDir}/config/checkstyle/checkstyle.xml")
        ignoreFailures = true
    }

    findbugs {
        toolVersion = "3.0.1"
        ignoreFailures = true
    }

    tasks.withType(FindBugs) {
        reports {
            xml.enabled = false
            html.enabled = true
        }
    }

    jacoco {
        toolVersion = "0.7.7.201606060606"
    }

    task sourcesJar(type: Jar, dependsOn: classes) {
        classifier = "sources"
        from sourceSets.main.allSource
    }

    task javadocJar(type: Jar, dependsOn: javadoc) {
        classifier = "javadoc"
        from javadoc.destinationDir
    }

    artifacts {
        archives sourcesJar
        archives javadocJar
    }
}

project(":spark-commons-core") {
    dependencies {
        compile "org.springframework:spring-aop:${springVersion}"
        compile "org.apache.commons:commons-lang3:${commonsLang3Version}"
        compileOnly "org.slf4j:jcl-over-slf4j:${slf4jVersion}"
    }
}

project(":spark-commons-batch") {
    dependencies {
        compile project(":spark-commons-core")
        compile "org.springframework.batch:spring-batch-core:${springBatchVersion}"
        compile "commons-io:commons-io:${commonsIoVersion}"
    }
}

project(":spark-commons-data") {
    dependencies {
        compileOnly "org.hibernate.javax.persistence:hibernate-jpa-2.1-api:${hibernateJpa21Version}"
    }
}

project(":spark-commons-web") {
    dependencies {
        compile "org.springframework:spring-web:${springVersion}"
        compile "org.apache.commons:commons-lang3:${commonsLang3Version}"
        compileOnly "javax.servlet:javax.servlet-api:${servletApiVersion}"
        compileOnly "javax.validation:validation-api:${validationApiVersion}"
    }
}

project(":spark-commons-session-store") {
    dependencies {
        compile "org.springframework:spring-jdbc:${springVersion}"
        compile "org.springframework:spring-tx:${springVersion}"
        compile "org.springframework:spring-web:${springVersion}"
        compile "org.apache.commons:commons-collections4:${commonsCollections4Version}"
        compile "org.apache.commons:commons-lang3:${commonsLang3Version}"
        compileOnly "javax.servlet:javax.servlet-api:${servletApiVersion}"
        compileOnly "org.slf4j:jcl-over-slf4j:${slf4jVersion}"
        testCompile project(":spark-commons-test")
        testCompile "javax.servlet:javax.servlet-api:${servletApiVersion}"
        testCompile "org.slf4j:jcl-over-slf4j:${slf4jVersion}"
        testCompile "ch.qos.logback:logback-classic:${logbackVersion}"
        testCompile "org.aspectj:aspectjweaver:${aspectjweaverVersion}"
        testCompile "org.mockito:mockito-core:${mockitoVersion}"
        testCompile "com.h2database:h2:${h2Version}"
    }
}

project(":spark-commons-test") {
    dependencies {
        compile "junit:junit:${junitVersion}"
        compile "org.hamcrest:hamcrest-library:${hamcrestVersion}"
        compile "org.dbunit:dbunit:${dbunitVersion}"
        compile "org.springframework:spring-test:${springVersion}"
        compile "org.springframework:spring-tx:${springVersion}"
        testCompile "ch.qos.logback:logback-classic:${logbackVersion}"
    }
}
