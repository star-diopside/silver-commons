buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath "io.spring.gradle:dependency-management-plugin:0.6.0.RELEASE"
    }
}

allprojects {
    group = "jp.gr.java_conf.star_diopside.silver.commons"
    version = "1.0.0-SNAPSHOT"

    ext {
        dbunitVersion = "2.5.3"
    }
}

subprojects {
    apply plugin: "java"
    apply plugin: "maven"
    apply plugin: "io.spring.dependency-management"
    apply plugin: "checkstyle"
    apply plugin: "findbugs"
    apply plugin: "jacoco"

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
    }

    repositories {
        jcenter()
    }

    dependencies {
        compileOnly "org.projectlombok:lombok"
    }

    dependencyManagement {
        imports {
            mavenBom "io.spring.platform:platform-bom:Athens-RELEASE"
        }
    }

    javadoc {
        options.charSet = "UTF-8"
        options.encoding = "UTF-8"
    }

    checkstyle {
        toolVersion = "7.1.1"
        configFile = file("${rootDir}/config/checkstyle/checkstyle.xml")
        ignoreFailures = true
    }

    findbugs {
        toolVersion = "3.0.1"
        ignoreFailures = true
    }

    tasks.withType(FindBugs) {
        reports {
            xml.enabled = false
            html.enabled = true
        }
    }

    jacoco {
        toolVersion = "0.7.7.201606060606"
    }

    task sourcesJar(type: Jar, dependsOn: classes) {
        classifier = "sources"
        from sourceSets.main.allSource
    }

    task javadocJar(type: Jar, dependsOn: javadoc) {
        classifier = "javadoc"
        from javadoc.destinationDir
    }

    artifacts {
        archives sourcesJar
        archives javadocJar
    }
}

project(":silver-commons-core") {
    dependencies {
        compile "org.springframework:spring-aop"
        compile "org.apache.commons:commons-lang3"
        compileOnly "org.slf4j:jcl-over-slf4j"
    }
}

project(":silver-commons-batch") {
    dependencies {
        compile project(":silver-commons-core")
        compile "org.springframework.batch:spring-batch-core"
    }
}

project(":silver-commons-data") {
    dependencies {
        compileOnly "org.eclipse.persistence:javax.persistence"
    }
}

project(":silver-commons-web") {
    dependencies {
        compile "org.springframework:spring-web"
        compile "org.apache.commons:commons-lang3"
        compileOnly "javax.servlet:javax.servlet-api"
        compileOnly "javax.validation:validation-api"
    }
}

project(":silver-commons-test") {
    dependencies {
        compile "junit:junit"
        compile "org.hamcrest:hamcrest-library"
        compile "org.dbunit:dbunit:${dbunitVersion}"
        compile "org.springframework:spring-test"
        compile "org.springframework:spring-tx"
        testCompile "ch.qos.logback:logback-classic"
    }
}
